import { environment } from "../../../dev.env";

const tokenExpirationInSeconds = 40000;
const jwt = require('jsonwebtoken');
let crypto = require('crypto');
export class JwtService {
    public static generateToken(permissionLevel: Number): {token: string, refreshToken: string} {
        try {
            let refreshId = 'nba_' + environment.jwt_secret;
            let salt = crypto.randomBytes(16).toString('base64');
            let hash = crypto.createHmac('sha512', salt).update(refreshId).digest("base64");
            let expiresAt = new Date();
            expiresAt.setHours(expiresAt.getHours() + (tokenExpirationInSeconds / 3600));
            let token = jwt.sign({
                userId: '007',
                email: 'autogenerated@jwt.com',
                permissionLevel: permissionLevel,
                provider: 'email',
                name: 'bond',
                refreshKey: salt
            },  environment.jwt_secret);
            let b = Buffer.from(hash);
            let refreshToken = b.toString('base64');
            return {token, refreshToken};
        } catch (err) {
            throw err;
        }
    }
}